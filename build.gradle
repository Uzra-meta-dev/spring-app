plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'io.freefair.lombok' version '8.14.2'
}

apply from: 'version.gradle'

repositories {
    mavenCentral()
}


dependencies {
//    implementation project(":common-logging-spring-boot-starter")

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.swagger}"
    implementation 'org.springframework.data:spring-data-envers'
    implementation "com.querydsl:querydsl-jpa:${versions.querydsljakarta}"
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsljakarta}"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"
}

def querydslDir = "$buildDir/generated/sources/annotationProcessor/java/main"

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

tasks.named('compileJava') {
    options.annotationProcessorPath = configurations.annotationProcessor
    // Указываем выходную директорию для аннотационного процессора
    options.compilerArgs << '-s' << querydslDir
}

clean {
    delete querydslDir
}

test {
    useJUnitPlatform()
    dependencies {

    }
}

wrapper {
    gradleVersion "${versions.gradleversion}"
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += "-parameters"
}

